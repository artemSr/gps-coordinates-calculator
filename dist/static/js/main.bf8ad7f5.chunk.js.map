{"version":3,"sources":["components/Map.js","App.js","index.js"],"names":["WrappedMap","withScriptjs","withGoogleMap","form","coordinates","lat","Number","parseFloat","lat1","lng","lon1","lat2","lon2","defaultZoom","defaultCenter","position","path","options","geodesic","strokeColor","strokeOpacity","strokeWeight","MapContainer","distance","style","width","height","containerElement","mapElement","googleMapURL","loadingElement","App","useState","setForm","setDistance","showMap","setShowMap","handleChange","event","target","name","value","className","onSubmit","preventDefault","isNaN","length","isFinite","trim","axios","method","url","data","config","headers","then","response","console","log","toFixed","type","onChange","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.bf8ad7f5.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {GoogleMap, withScriptjs, withGoogleMap, Marker, Polyline} from \"react-google-maps\";\r\n\r\n\r\n\r\nfunction Map({form}){\r\n  const coordinates = [{lat: Number.parseFloat(form.lat1), lng: Number.parseFloat(form.lon1)},{lat: Number.parseFloat(form.lat2), lng: Number.parseFloat(form.lon2)}]\r\n  return(\r\n    <div>\r\n      <GoogleMap defaultZoom={5} defaultCenter={{lat: Number.parseFloat(form.lat1), lng: Number.parseFloat(form.lon1)}}>\r\n        <Marker position={{lat: Number.parseFloat(form.lat1), lng: Number.parseFloat(form.lon1)}} />\r\n        <Marker position={{lat: Number.parseFloat(form.lat2), lng: Number.parseFloat(form.lon2)}} />\r\n        <Polyline\r\n          path={coordinates}\r\n          options={{\r\n            geodesic: true,\r\n            strokeColor: '#FF0000',\r\n            strokeOpacity: 1.0,\r\n            strokeWeight: 2,\r\n          }}\r\n        />\r\n      </GoogleMap>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst WrappedMap = withScriptjs(withGoogleMap(Map))\r\n\r\nexport default function MapContainer({form, distance}){\r\n  return(\r\n    <div style={{width: \"700px\", height: \"500px\"}}>\r\n      <h1>Расстояние между точками {distance} км</h1>\r\n      <WrappedMap\r\n        containerElement={<div style={{height: \"100%\"}}/>}\r\n        mapElement={<div style={{height: \"100%\"}}/>}\r\n        googleMapURL={\"https://maps.googleapis.com/maps/api/js?v=3.exp&libraries=geometry,drawing,places&key=AIzaSyDbKDDln0bJkfX4tO4fywUHiGFZaNzKSpc\"}\r\n        loadingElement={<div style={{height: \"100%\"}}/>}\r\n        form={form}\r\n      />\r\n    </div>\r\n  )\r\n}","import React, { useState } from 'react';\nimport axios from \"axios\";\nimport Map from \"./components/Map\";\n\nconst App = () => {\n  const [form, setForm] = useState({\n    lat1: '', lon1: '', lat2: '', lon2: ''\n  })\n  const [distance, setDistance] = useState(\"\")\n  const [showMap, setShowMap] = useState(false)\n\n  const handleChange = (event) => {\n    setForm({...form, [event.target.name]: event.target.value})\n  }\n\n  const handleSubmit = event => {\n    event.preventDefault()\n\n    if (isNaN(form.lat1) || isNaN(form.lat2) || isNaN(form.lon1) || isNaN(form.lon2)){\n      return\n    }\n    if (!form.lat1.length || !form.lat2.length || !form.lon1.length || !form.lon2.length){\n      return;\n    }\n    if (!isFinite(form.lat1) || !isFinite(form.lat2) || !isFinite(form.lon1) || !isFinite(form.lon2))\n    {\n      return;\n    }\n    if (form.lat1.trim() && form.lat2.trim() && form.lon1.trim() && form.lon2.trim()){\n      axios({\n        method: 'post',\n        url: '/coordinates',\n        data: form,\n        config: { headers: {'Content-Type': 'multipart/form-data' }}\n      })\n        .then(function (response) {\n          console.log(response)\n          const data = response.data.distance.toFixed(1)\n          console.log(data)\n          setDistance(data)\n          setShowMap(true)\n        })\n    }\n  }\n\n\n  return (\n    <div className='wrapper'>\n      <form onSubmit={handleSubmit}>\n        <div className='inputWrapper'>\n          <div className='labelWrapper'>\n            <label>\n              Latitude 1:\n              <input type=\"text\" name='lat1' value={form.lat1} onChange={handleChange} />\n            </label>\n            <label>\n              Longitude 1:\n              <input type=\"text\" name='lon1' value={form.lon1} onChange={handleChange} />\n            </label>\n          </div>\n          <div className='labelWrapper'>\n            <label>\n              Latitude 2:\n              <input type=\"text\" name='lat2' value={form.lat2} onChange={handleChange}/>\n            </label>\n            <label>\n              Longitude 2:\n              <input type=\"text\" name='lon2' value={form.lon2} onChange={handleChange}/>\n            </label>\n          </div>\n        </div>\n        <input className='submit' type=\"submit\" value=\"Рассчитать\" />\n      </form>\n      {distance? <Map form={form} distance={distance} showMap={showMap}/>:null}\n    </div>\n  );\n};\n\nexport default App;\n\n\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}